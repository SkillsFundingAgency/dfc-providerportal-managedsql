{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string",
      "metadata": {
        "description": "The environment being deployed to. Used to generate all resource names (apart from storage)"
      }
    },
    "sqlServerAdminUserName": {
      "type": "string",
      "metadata": {
        "description": "The Azure SQL Server Administrator (SA) username (will auto-generate one if not passed in)"
      }
    },
    "sqlServerAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The Azure SQL Server Administrator (SA) password"
      }
    },
    "sqlServerActiveDirectoryAdminLogin": {
      "type": "string",
      "metadata": {
        "description": "The active directory admin that will be assigned to the SQL server"
      }
    },
    "sqlServerActiveDirectoryAdminObjectId": {
      "type": "string",
      "metadata": {
        "description": "The object id of the active directory admin that will be assigned to the SQL server"
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0",
      "metadata": {
        "description": "First 2 octects of VNet Private IP address range (VNet prefix)"
      }
    },
    "virtualNetworkRoutedSubnets": {
      "type": "array",
      "metadata": {
        "description": "Array of subnets to create"
      }
    },
    "virtualNetworkNonRoutedSubnets": {
      "type": "array",
      "metadata": {
        "description": "Array of subnets to create"
      }
    },
    "deployManagedSql": {
      "type": "bool",
      "metadata": {
        "description": "Boolean for deploying managed sql or not."
      }
    },
    "publicDataEndpointEnabled": {
      "type": "bool",
      "metadata": {
        "description": "Control whether the public endopint is available or not."
      }
    }
  },
  "variables": {
    "sharedPrefix": "[tolower(concat('dfc-', parameters('environment'), '-msql'))]",
    "dfcDevOpsTemplatesUrl": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/ArmTemplates/",
    "localTemplatesUrl": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-providerportal-managedsql/master/Resources/",
    "storageAccountName": "[concat(replace(variables('sharedPrefix'),'-',''),'str')]",
    "msqlVNetResourceGroupName": "[concat(variables('sharedPrefix'),'-rg')]",
    "msqlServerName": "[concat(variables('sharedPrefix'),'-msql')]",
    "managedSQLNSG": "[concat(variables('sharedPrefix'),'-nsg')]",
    "msqlSubnetName": "[concat(variables('sharedPrefix'),'-sn')]",
    "msqlVnetName": "[concat(variables('sharedPrefix'),'-vnet')]",
    "dataFactoryName": "[concat(variables('sharedPrefix'),'-df')]",
    "actionGroupName": "[tolower(concat('dfc-', parameters('environment'),'-prov-monitor-df-actgrp'))]"
  },
  "resources": [
    {
      "name": "blobStorage",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'storage-account.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          }
        }
      }
    },
    {
      "name": "managedSQLNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'network.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkPrefix": {
            "value": "[variables('sharedPrefix')]"
          },
          "virtualNetworkAddressPrefix": {
            "value": "[parameters('virtualNetworkAddressPrefix')]"
          },
          "virtualNetworkRoutedSubnets": {
            "value": "[parameters('virtualNetworkRoutedSubnets')]"
          },
          "virtualNetworkNonRoutedSubnets": {
            "value": "[parameters('virtualNetworkNonRoutedSubnets')]"
          }
        }
      }
    },
    {
      "name": "managedSQLNSG",
      "type": "Microsoft.Resources/deployments",
      "condition": "[parameters('deployManagedSql')]",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('localTemplatesUrl'), 'network-security-groups/msql-nsg.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "name": {
            "value": "[variables('managedSQLNSG')]"
          }
        }
      },
      "dependsOn": [
        "managedSQLNetwork"
      ]

    },
    {
      "name": "managedSQL",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "condition": "[parameters('deployManagedSql')]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'sql-managed-instance.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "msqlServerName": {
            "value": "[variables('msqlServerName')]"
          },
          "msqlSubnetId": {
            "value": "[resourceid(variables('msqlVNetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', variables('msqlVnetName'), variables('msqlSubnetName'))]"
          },
          "sqlServerAdminUserName": {
            "value": "[parameters('sqlServerAdminUserName')]"
          },
          "sqlServerAdminPassword": {
            "value": "[parameters('sqlServerAdminPassword')]"
          },
          "sqlServerActiveDirectoryAdminLogin": {
            "value": "[parameters('sqlServerActiveDirectoryAdminLogin')]"
          },
          "sqlServerActiveDirectoryAdminObjectId": {
            "value": "[parameters('sqlServerActiveDirectoryAdminObjectId')]"
          },
          "publicDataEndpointEnabled": {
            "value": "[parameters('publicDataEndpointEnabled')]"
          }
        }
      },
      "dependsOn": [
        "managedSQLNetwork",
        "managedSQLNSG"
      ]
    },
    {
      "name": "dataFactory",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'datafactory.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "DataFactoryName": {
            "value": "[variables('dataFactoryName')]"
          }
        }
      },
      "dependsOn": [
        "blobStorage"
      ]
    },
    {
      "name": "tribalSSISIntegrationRuntime",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('dfcDevOpsTemplatesUrl'),'DataFactory/datafactory-ssis-integration-runtime.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "DataFactoryName": {
            "value": "[variables('dataFactoryName')]"
          },
          "RuntimeName": {
            "value": "tribalSSIS"
          },
          "RuntimeDescription": {
            "value": "SSIS runtime for transforming Tribal data"
          },
          "NodeSize": {
            "value": "Standard_D2_v3"
          },
          "CatalogServerEndpoint": {
            "value": "[concat(variables('msqlServerName'), '.public', replace(reference('managedSQL','2017-05-10').outputs.fullyQualifiedDomainName.value, variables('msqlServerName'), ''), ', 3342')]"
          },
          "CatalogServerAdminUsername": {
            "value": "[parameters('sqlServerAdminUserName')]"
          },
          "CatalogServerAdminPassword": {
            "value": "[parameters('sqlServerAdminPassword')]"
          },
          "MaxConcurrentJobsPerNode": {
            "value": 2
          }
        }
      },
      "dependsOn": [
        "dataFactory",
        "managedSQL"
      ]      
    },
    {
      "name": "[concat(variables('dataFactoryName'), '-failed-pipelines')]",
      "apiVersion": "2019-05-01",
      "type": "Microsoft.Resources/deployments",
      "properties": {
          "mode": "Incremental",
          "templateLink": {
              "uri": "[concat(variables('dfcDevOpsTemplatesUrl'), 'Application-Insights/metric-alerts.json')]",
              "contentVersion": "1.0.0.0"
          },
          "parameters": {
              "enabled": {
                  "value": true
              },
              "alertName": {
                  "value": "[concat(variables('dataFactoryName'), '-failed-pipelines')]"
              },
              "alertSeverity": {
                  "value": 3
              },
              "metricName": {
                  "value": "PipelineFailedRuns"
              },
              "operator": {
                  "value": "GreaterThan"
              },
              "threshold": {
                  "value": "0"
              },
              "aggregation": {
                  "value": "Total"
              },
              "windowSize": {
                  "value": "PT5M"
              },
              "evaluationFrequency": {
                  "value": "PT1M"
              },
              "actionGroupName": {
                  "value": "[variables('actionGroupName')]"
              },
              "resourceId": {
                  "value": "[resourceId('Microsoft.DataFactory/factories', variables('dataFactoryName'))]"
              }
          }
      },
      "dependsOn": [
          "dataFactory"
      ]
    }
  ],
  "outputs": {
    "msqlServerName": {
      "type": "string",
      "value": "[variables('msqlServerName')]"
    },
    "managedSQLPublicUri": {
      "type": "string",
      "value": "[replace(reference('managedSQL','2017-05-10').outputs.fullyQualifiedDomainName.value, variables('msqlServerName'), '')]"
    }
  }
}
